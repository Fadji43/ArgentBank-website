swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Obtenir les transactions
      description: API pour récupérer les transactions de l'utilisateur dans une plage de dates
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID de l'utilisateur
        - name: startDate
          in: query
          type: string
          format: date
          description: Date de début de la plage de transactions (format YYYY-MM-DD)
        - name: endDate
          in: query
          type: string
          format: date
          description: Date de fin de la plage de transactions (format YYYY-MM-DD)
      responses:
        '200':
          description: Transactions récupérées avec succès
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: ID de la transaction
                date:
                  type: string
                  format: date-time
                  description: Date de la transaction
                amount:
                  type: number
                  description: Montant de la transaction
                description:
                  type: string
                  description: Description de la transaction
                balance:
                  type: number
                  description: Solde après la transaction
        '400':
          description: Champs non valides
        '500':
          description: Erreur interne du serveur
  /user/accounts/{id}/transactions/{id}:   
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Obtenir les transactions
      description: API pour récupérer les transactions de l'utilisateur dans une plage de dates
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID de l'utilisateur
        - name: startDate
          in: query
          type: string
          format: date
          description: Date de début de la plage de transactions (format YYYY-MM-DD)
        - name: endDate
          in: query
          type: string
          format: date
          description: Date de fin de la plage de transactions (format YYYY-MM-DD)
      responses:
        '200':
          description: Transactions récupérées avec succès
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: ID de la transaction
                date:
                  type: string
                  format: date-time
                  description: Date de la transaction
                amount:
                  type: number
                  description: Montant de la transaction
                description:
                  type: string
                  description: Description de la transaction
                balance:
                  type: number
                  description: Solde après la transaction
                category:
                  type: string
                  description: Catégorie de la transaction
                note:
                  type: string
                  description: Note de la transaction
        '400':
          description: Champs non valides
        '500':
          description: Erreur interne du serveur
  /user/accounts/{id}/transactions-update/{id}:
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Mettre à jour une transaction
      description: API pour mettre à jour une transaction de l'utilisateur
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: ID de la transaction à mettre à jour
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                description: Catégorie de la transaction
              note:
                type: string
                description: Note de la transaction
      responses:
        '200':
          description: Transaction mise à jour avec succès
          schema:
            $ref: '#/definitions/Account-Transaction'
        '400':
          description: Champs non valides
        '404':
          description: Transaction non trouvée
        '500':
          description: Erreur interne du serveur
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: object
    properties:
      date:
        type: string
        description: transaction date
      description:
        type: string
        description: transaction description 
      amount:
        type: number
        description: transaction amount
      balance:
        type: number
        description: Account balance after transaction
      transaction type:
        type: number
        description: transaction description
  Account-Transaction:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: integer
            description: ID de la transaction
          date:
            type: string
            format: date-time
            description: Date de la transaction
          amount:
            type: number
            description: Montant de la transaction
          description:
            type: string
            description: Description de la transaction
          balance:
            type: number
            description: Solde après la transaction
          transactionType:
            type: number
            description: Type de transaction
          category:
            type: string
            description: Catégorie de la transaction
          note:
            type: string
            description: Note de la transaction
  AccountDescription-update:
      type: object
      properties:
        category:
          type: string
          description: Catégorie de la transaction
        note:
          type: string
          description: Note de la transaction

